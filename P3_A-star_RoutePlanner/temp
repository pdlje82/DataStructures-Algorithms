# Initialise open and closed lists
# Make the start vertex current
# Calculate heuristic distance of start vertex to destination (h)
# Calculate f value for start vertex (f = g + h, where g = 0)
# WHILE current vertex is not the destination
#     FOR each vertex adjacent to current
#         IF vertex not in closed list and not in open list THEN
#             Add vertex to open list
#         END IF
#         Calculate distance from start (g)
#         Calculate heuristic distance to destination (h)
#         Calculate f value (f = g + h)
#         IF new f value < existing f value or there is no existing f value THEN
#             Update f value
#             Set parent to be the current vertex
#         END IF
#     NEXT adjacent vertex
#     Add current vertex to closed list
#     Remove vertex with lowest f value from open list and make it current
# END WHILE


f_dict = {'p1': 4,
     'p3': 2,
     'p4': -10,
     'p2': 45
}
print(f_dict.pop(min(f_dict, key=f_dict.get)))

